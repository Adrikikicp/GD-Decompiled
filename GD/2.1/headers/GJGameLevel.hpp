#include <windows.h>
#include <string>
//class taken from android
class GJGameLevel
{
    int vtable_ptr;
    BYTE gap4[232];
    DWORD lastBuildSave_;
    int levelIDSeed_;
    int levelIDRand_;
    int levelID_;
    std::string levelName_;
    std::string levelDescription_;
    std::string levelString_;
    std::string userName_;
    std::string recordString_;
    int field_110;
    int field_114;
    int userIDSeed_;
    int userIDRand_;
    int userID_;
    int accountIDSeed_;
    int accountIDRand_;
    int accountID_;
    int levelDifficulty_;
    int songIndex_;
    int customSongID_;
    int levelRevision_;
    bool isUnlisted_;
    BYTE gap141[3];
    int objectCountSeed_;
    int objectCountRand_;
    int objectCount_;
    int levelOrder_;
    int ratings_;
    int ratingsSum_;
    int downloads_;
    bool isEditable_;
    bool isGauntlet_;
    bool isGauntlet2_;
    BYTE gap163;
    int editorTime_;
    int editorCopiesTime_;
    bool hasLDM_;
    bool toggleLDM_;
    BYTE gap16E[2];
    int isVerifiedSeed_;
    int isVerifiedRand_;
    bool isVerified_;
    bool isUploaded_;
    bool hasBeenAltered_;
    BYTE gap17B;
    int levelVersion_;
    int gameVersion_;
    int attemptsSeed_;
    int attemptsRand_;
    int attempts_;
    int jumpsSeed_;
    int jumpsRand_;
    int jump_;
    int clicksSeed_;
    int clicksRand_;
    int clicks_;
    int playerTimeSeed_;
    int playerTimeRand_;
    int playerTime_;
    int levelSeed_;
    bool chkValid_;
    bool triggeredAnticheat_;
    char gap1BA;
    int normalModePercentage_;
    int normalPercentageRand_;
    int normalPercentageSeed_;
    int normalNewPercentageSeed_;
    int normalNewPercentageRand_;
    int normalNewPercentage_;
    int normalNew2PercentageSeed_;
    int normalNew2PercentageRand_;
    int normalNew2Percentage_;
    int practicePercentage_;
    int likes_;
    int dislikes_;
    int length_;
    int featureScore_;
    bool isEpic_;
    bool levelFavourited_;
    BYTE gap1F6[2];
    int levelFolder_;
    int timelyIDSeed_;
    int timelyIDRand_;
    int timelyID_;
    int demonSeed_;
    int demonRand_;
    int demon_;
    int demonDifficulty_;
    int starsSeed_;
    int starsRand_;
    int stars_;
    bool isAuto_;
    BYTE gap225[3];
    int totalCoins_;
    int coinsVerifiedSeed_;
    int coinsVerifiedRand_;
    int coinsVerified_;
    int passwordSeed_;
    int passwordRand_;
    int copiedIDSeed_;
    int copiedIDRand_;
    int copiedID_;
    bool isTwoPlayer_;
    BYTE gap24D[7];
    int coin1Seed_;
    int coin1Rand_;
    int coin1_;
    int coin2Seed_;
    int coin2Rand_;
    int coin2_;
    int coin3Seed_;
    int coin3Rand_;
    int coin3_;
    int requestedStars_;
    BYTE gap27C[36];
    bool isChallenge_;
    bool isLevelPlayable_;
    BYTE gap2A2[2];
    int requiredCoins_;
    bool isUnlocked_;
    BYTE gap2A9[3];
    float cameraXPos_;
    float cameraYPos_;
    float cameraZoom_;
    int buildTab_;
    int buildTabPage;
    int editorLayer_;
    int levelType_;
    BYTE gap2C8[4];
    std::string tempName_;
    std::string capacityString_;
    bool highObjectCount_;
    std::string levelProgress_;

    void setLevelName(std::string levelName);
    void setDemon(bool demon);
    void setStars(int stars);
    void setCapacityString(std::string capacityString);
    std::string getLevelName();
    void setPassword(int password);
    bool canEncode();
    void constructor();
};