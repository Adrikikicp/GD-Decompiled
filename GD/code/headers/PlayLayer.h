#include "includes.h"

// still a WIP many members may be incorrect as i might have missed something
class PlayLayer : public GJBaseGameLayer, CCCircleWaveDelegate, CurrencyRewardDelegate, DialogDelegate
{
public:
	DWORD dwordC;
	BYTE gap2DC;
	bool m_bCheated;
	bool m_bStartGame;
	bool field_2DF;
	float dword14;
	bool dword18;
	cocos2d::CCDrawNode* m_pUnkDrawNode;
	// floats here all related to updating camera, very weird
	float m_fY;
	float dword24;
	float m_fY1;
	float dword2C;
	float dword30;
	bool m_bDeactivateSectionObjects;
	bool m_bDisableShake2;
	bool m_bDisableShake;
	BYTE PAD1[25];
	StartPosObject* m_pStartPos;
	CheckpointObject* m_pStartPosCheckpoint;
	EndPortalObject* m_pEndPortal;
	cocos2d::CCArray* m_pCheckpointArray;
	cocos2d::CCArray* m_pSpeedObjects;
	cocos2d::CCArray* m_pSpeedPortalArray;
	cocos2d::CCArray* m_pSomeArray;
	cocos2d::CCSprite* m_pBackground;
	cocos2d::CCRect m_obBackgroundRect;
	cocos2d::CCArray* m_pSomeArray2;
	cocos2d::CCArray* m_pActiveObjects;
	cocos2d::CCArray* m_pUnkVisibleObjArr;
	cocos2d::CCArray* m_pMoveActionsArr;
	bool m_bMusicDisabled;
	BYTE PAD2[7];
	cocos2d::CCArray* m_pStateObjects;
	cocos2d::CCParticleSystemQuad* m_pGlitterEffects;
	cocos2d::CCDictionary* m_pItemDict;
	cocos2d::CCArray* m_pCircleWaves;
	cocos2d::CCArray* m_pTriggeredObjects;
	AudioEffectsLayer* m_pAudioEffectsLayer;
	float dwordA8;
	float dwordAC;
	GJGroundLayer* m_pBottomGround;
	GJGroundLayer* m_pTopGround;
	BYTE PAD3[8];
	bool m_bDead;
	bool field_38D;
	bool field_38E;
	bool field_38F;
	BYTE PAD4[4];
	int m_nRand;
	DWORD dwordCC;
	bool dwordD0;
	float m_fTimeMod;
	cocos2d::CCSize m_obLevelSize;
	cocos2d::CCLabelBMFont* m_pAttemptLabel;
	cocos2d::CCLabelBMFont* m_pPercentLabel;
	bool m_bCameraShaking;
	float m_fStrength;
	float m_fInterval;
	double m_dLastShakeTime;
	cocos2d::CCPoint m_obCameraShake;
	bool m_bShowedHint;
	float m_fCameraXMaybe;
	float m_fUnkMirrorPortalFloat;
	bool dword110;
	DWORD dword114;
	cocos2d::CCDictionary* m_pClaimedParticles;
	cocos2d::CCDictionary* m_pParticleDict;
	cocos2d::CCArray* m_pClaimedParticlesArray;
	cocos2d::CCNode* m_pLightningNode;
	cocos2d::CCSprite* m_pProgressBarGroove;
	cocos2d::CCSprite* ProgressBar;
	cocos2d::CCSize m_obSlider;
	float m_fUnkFlashEffect;
	int m_nTotalGravityEffectSprites;
	int m_nGravityEffect;
	int m_nGravitySpriteIdx;
	cocos2d::CCArray* m_pGravitySprites;
	bool m_bJustDont;
	bool m_bIsLocalLevel;
	//related to replays, very inconsistent, frozen ones are triggered with start pos, button pushes only work some of the time
	bool m_bPlayer1PushedButtonMaybe;
	bool m_bPlayerFrozen;
	bool m_bPlayer2PushedButtonMaybe;
	bool m_bPlayer2Frozen;

	std::string m_sReplayData;
	cocos2d::CCArray* m_pReplayArray;
	double m_dTime;
	bool dword164;
	BYTE PAD5[4];
	bool dword16C;
	bool field_439;
	cocos2d::CCDictionary* m_pColourDict;
	std::map<short,bool> m_sBlending; // an index is put in then the blending state is returned
	DWORD dword184;
	DWORD dword188;
	bool dword18C;
	bool field_459;
	GameObject* m_pLastActivatedPortal;
	GameObject* m_pPortal;
	bool m_bFlipped;
	float m_fMirrorTransition;
	UILayer* m_pUILayer;
	GJGameLevel* m_pLevel;
	cocos2d::CCPoint m_obCameraPos;
	bool m_bTestMode;
	bool m_bPracticeMode;
	bool field_47E;
	bool field_47F;
	cocos2d::CCArray* m_pSomeArray3;
	bool dword1B8;
	cocos2d::CCPoint m_obPlayerPosition;
	int m_nAttempts;
	DWORD m_nJumpCount;
	bool m_bHasClicked;
	float m_fTime;
	int m_nAttemptJumps;
	bool m_bLeaderboardPercent;
	bool m_bShowUI;
	bool field_4A6;
	bool field_4A7;
	int m_nBestPercent;
	bool m_bhasNotCompletedStarLevel;
	int m_nAwardedCurrency;
	int m_nAwardedDiamonds;
	bool m_bAwardedSecretKey;
	bool m_bNotRecording;
	cocos2d::CCArray* m_pObjectStateArr;
	cocos2d::CCDictionary* m_pSaveRequiredGroupsUIDs;
	BYTE PAD6[4];
	double dword1FC;
	double dword204;
	double dword20C;
	bool dword214;
	float field_4E4;
	int dword21C;
	double m_dAttemptTime;
	double m_dTempMilliTime;
	double m_dAttemptTimeSeed;
	double m_dAttemptTimeRand;
	DWORD dword244;
	bool m_bGlitter;
	bool m_bBGEffectVisibility;
	BYTE gap516;
	bool m_bGamePaused;
	GameObject* m_pCollidedObject;
	bool m_bVfDChk;
	bool m_bDisableGravityEffect;
};
